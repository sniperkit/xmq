# Default env config is a Benthos config file containing most of the default
# values set to environment variables. Non-URL variables have default values.
#
# In order to use this config simply define the `BENTHOS_INPUT` and
# `BENTHOS_OUTPUT` variables to your desired targets, along with the appropriate
# variables for those chosen targets. E.g. for piping Kafka to RabbitMQ:
#
# BENTHOS_INPUT=kafka_balanced \
# KAFKA_INPUT_BROKER_ADDRESSES=localhost:9092 \
# KAFKA_INPUT_TOPIC=foo-topic \
# KAFKA_INPUT_CONSUMER_GROUP=foo-consumer \
# BENTHOS_OUTPUT=amqp \
# AMQP_OUTPUT_URL=amqp://guest:guest@localhost:5672/ \
# AMQP_OUTPUT_EXCHANGE=foo-exchange \
# AMQP_OUTPUT_EXCHANGE_TYPE=direct \
# benthos -c ./default_env.yaml
#
http:
  address: ${BENTHOS_HTTP_ADDRESS:0.0.0.0:4195}
input:
  type: ${BENTHOS_INPUT:http_server}
  http_server:
    address: ${HTTP_SERVER_INPUT_ADDRESS}
    path: ${HTTP_SERVER_INPUT_PATH:/post}
  zmq4:
    urls:
    - ${ZMQ_INPUT_URLS}
    bind: ${ZMQ_INPUT_BIND:true}
    socket_type: ${ZMQ_INPUT_SOCKET:PULL}
  scalability_protocols:
    urls:
    - ${SCALE_PROTO_INPUT_URLS}
    bind: ${SCALE_PROTO_INPUT_BIND:true}
    socket_type: ${SCALE_PROTO_INPUT_SOCKET:PULL}
  kafka:
    addresses:
    - ${KAFKA_INPUT_BROKER_ADDRESSES}
    client_id: ${KAFKA_INPUT_CLIENT_ID:benthos-client}
    consumer_group: ${KAFKA_INPUT_CONSUMER_GROUP:benthos-group}
    topic: ${KAFKA_INPUT_TOPIC:benthos-stream}
    partition: ${KAFKA_INPUT_PARTITION:0}
    start_from_oldest: ${KAFKA_INPUT_START_OLDEST:true}
  kafka_balanced:
    addresses:
    - ${KAFKA_INPUT_BROKER_ADDRESSES}
    client_id: ${KAFKA_INPUT_CLIENT_ID:benthos-client}
    consumer_group: ${KAFKA_INPUT_CONSUMER_GROUP:benthos-group}
    topics:
    - ${KAFKA_INPUT_TOPIC:benthos-stream}
    start_from_oldest: ${KAFKA_INPUT_START_OLDEST:true}
  amqp:
    url: ${AMQP_INPUT_URL}
    exchange: ${AMQP_INPUT_EXCHANGE:benthos-exchange}
    exchange_type: ${AMQP_INPUT_EXCHANGE_TYPE:direct}
    queue: ${AMQP_INPUT_QUEUE:benthos-stream}
    key: ${AMQP_INPUT_KEY:benthos-key}
    consumer_tag: ${AMQP_INPUT_CONSUMER_TAG:benthos-consumer}
  nsq:
    nsqd_tcp_addresses:
    - ${NSQD_INPUT_TCP_ADDRESSES}
    lookupd_http_addresses:
    - ${NSQD_INPUT_LOOKUP_ADDRESSES}
    topic: ${NSQ_INPUT_TOPIC:benthos-messages}
    channel: ${NSQ_INPUT_CHANNEL:benthos-stream}
    user_agent: ${NSQ_INPUT_USER_AGENT:benthos-consumer}
  nats:
    urls:
    - ${NATS_INPUT_URLS}
    subject: ${NATS_INPUT_SUBJECT:benthos-stream}
  nats_stream:
    urls:
    - ${NATS_INPUT_URLS}
    cluster_id: ${NATS_INPUT_CLUSTER_ID:benthos-cluster}
    client_id: ${NATS_INPUT_CLIENT_ID:benthos-consumer}
    queue: ${NATS_INPUT_QUEUE:benthos-queue}
    durable_name: ${NATS_INPUT_DURABLE_NAME:benthos-offset}
    subject: ${NATS_INPUT_SUBJECT:benthos-stream}
  redis_pubsub:
    url: ${REDIS_INPUT_URL}
    channels:
    - ${REDIS_INPUT_CHANNEL:benthos-stream}
  file:
    path: ${FILE_INPUT_PATH}
    multipart: ${FILE_INPUT_MULTIPART:false}
    max_buffer: ${FILE_INPUT_MAX_BUFFER:65536}
  processors:
  - type: bounds_check
    bounds_check:
      max_parts: ${BENTHOS_MAX_PARTS:100}
      min_parts: ${BENTHOS_MIN_PARTS:1}
      max_part_size: ${BENTHOS_MAX_PART_SIZE:1073741824}
  - type: ${BENTHOS_INPUT_PROCESSOR:noop}
output:
  type: ${BENTHOS_OUTPUT:http_server}
  http_client:
    url: ${HTTP_CLIENT_OUTPUT_URL}
  http_server:
    address: ${HTTP_SERVER_OUTPUT_ADDRESS}
    path: ${HTTP_SERVER_OUTPUT_PATH:/get}
    stream_path: ${HTTP_SERVER_OUTPUT_STREAM_PATH:/get/stream}
  zmq4:
    urls:
    - ${ZMQ_OUTPUT_URLS}
    bind: ${ZMQ_OUTPUT_BIND:true}
    socket_type: ${ZMQ_OUTPUT_SOCKET:PULL}
  scalability_protocols:
    urls:
    - ${SCALE_PROTO_OUTPUT_URLS}
    bind: ${SCALE_PROTO_OUTPUT_BIND:false}
    socket_type: ${SCALE_PROTO_OUTPUT_SOCKET:PUSH}
  kafka:
    addresses:
    - ${KAFKA_OUTPUT_BROKER_ADDRESSES}
    client_id: ${KAFKA_OUTPUT_CLIENT_ID:benthos-client}
    topic: ${KAFKA_OUTPUT_TOPIC:benthos-stream}
    ack_replicas: ${KAFKA_OUTPUT_ACK_REP:true}
  amqp:
    url: ${AMQP_OUTPUT_URL}
    exchange: ${AMQP_OUTPUT_EXCHANGE:benthos-exchange}
    exchange_type: ${AMQP_OUTPUT_EXCHANGE_TYPE:direct}
    key: ${AMQP_OUTPUT_KEY:benthos-key}
  nsq:
    nsqd_tcp_address: ${NSQ_OUTPUT_TCP_ADDRESS}
    topic: ${NSQ_OUTPUT_TOPIC:benthos-messages}
    user_agent: ${NSQ_OUTPUT_USER_AGENT:benthos-consumer}
  nats:
    urls:
    - ${NATS_OUTPUT_URLS}
    subject: ${NATS_OUTPUT_SUBJECT:benthos-stream}
  nats_stream:
    urls:
    - ${NATS_OUTPUT_URLS}
    cluster_id: ${NATS_OUTPUT_CLUSTER_ID:benthos-cluster}
    client_id: ${NATS_OUTPUT_CLIENT_ID:benthos-consumer}
    subject: ${NATS_OUTPUT_SUBJECT:benthos-stream}
  redis_pubsub:
    url: ${REDIS_OUTPUT_URL}
    channel: ${REDIS_OUTPUT_CHANNEL:benthos-stream}
  file:
    path: ${FILE_OUTPUT_PATH}
  processors:
  - type: ${BENTHOS_OUTPUT_PROCESSOR:noop}
logger:
  prefix: benthos
  log_level: ${BENTHOS_LOG_LEVEL:INFO}
